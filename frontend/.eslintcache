[{"/Users/vickyhhuang/Desktop/RelyDigital_FullStackDeveloper_VickyHuang/frontend/src/index.js":"1","/Users/vickyhhuang/Desktop/RelyDigital_FullStackDeveloper_VickyHuang/frontend/src/reportWebVitals.js":"2","/Users/vickyhhuang/Desktop/RelyDigital_FullStackDeveloper_VickyHuang/frontend/src/app/index.js":"3","/Users/vickyhhuang/Desktop/RelyDigital_FullStackDeveloper_VickyHuang/frontend/src/pages/index.js":"4","/Users/vickyhhuang/Desktop/RelyDigital_FullStackDeveloper_VickyHuang/frontend/src/pages/InfoInsert.jsx":"5","/Users/vickyhhuang/Desktop/RelyDigital_FullStackDeveloper_VickyHuang/frontend/src/api/index.js":"6","/Users/vickyhhuang/Desktop/RelyDigital_FullStackDeveloper_VickyHuang/frontend/src/fonts/Poppins/fonts.js":"7"},{"size":146,"mtime":1610929716899,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1610734615946,"results":"10","hashOfConfig":"9"},{"size":333,"mtime":1610926861171,"results":"11","hashOfConfig":"9"},{"size":60,"mtime":1610741565607,"results":"12","hashOfConfig":"9"},{"size":4070,"mtime":1610984967747,"results":"13","hashOfConfig":"9"},{"size":269,"mtime":1610819465593,"results":"14","hashOfConfig":"9"},{"size":238,"mtime":1610928556574,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1qwbwgq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/vickyhhuang/Desktop/RelyDigital_FullStackDeveloper_VickyHuang/frontend/src/index.js",[],["33","34"],"/Users/vickyhhuang/Desktop/RelyDigital_FullStackDeveloper_VickyHuang/frontend/src/reportWebVitals.js",[],"/Users/vickyhhuang/Desktop/RelyDigital_FullStackDeveloper_VickyHuang/frontend/src/app/index.js",[],"/Users/vickyhhuang/Desktop/RelyDigital_FullStackDeveloper_VickyHuang/frontend/src/pages/index.js",[],"/Users/vickyhhuang/Desktop/RelyDigital_FullStackDeveloper_VickyHuang/frontend/src/pages/InfoInsert.jsx",["35"],"import React, { Component } from 'react'\nimport api from '../api'\n\nimport styled from 'styled-components'\n// import GlobalFonts from '../fonts/Poppins/fonts'\n\nconst Title = styled.h4`\n    margin-bottom: 30px;\n    margin-top: 60px;\n    align-self: center;\n    font-weight: bold;\n`\n\n\nconst Label = styled.label`\n`\n\nconst InputText = styled.input`\n    border-radius: 0px;\n    margin-bottom: 20px;\n    border: solid 1px rgba(72, 72, 72, 0.3);\n    padding: 10px 20px;\n    height: 44px;\n`\n\n\nconst Button = styled.button`\n    margin-top: 5px;\n    margin-bottom: 20px;\n    background: #484848;\n    color: white;\n    border: #484848;\n    border-radius: 1px;\n    padding: 10px 120px;\n    transition-duration: 0.1s;\n    &:hover {\n        background: #36B1A7;\n      }\n`\n\nconst Wrapper = styled.div.attrs({\n    className: 'form-group',\n})`\n    margin: 10px 20px;\n    color: #484848;\n    display: flex;\n    flex-direction: column;\n    justify-items: center;\n    align-items: center;\n`\n\nconst InfoForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-items: center;\n    max-width: fit-content;\n`\nconst InfoList = styled.div`\n    border: solid 1px rgba(72, 72, 72, 0.3);\n    padding: 10px;\n`\n\nclass InfoInsert extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            name: '',\n            email: '',\n            info: null,\n        }\n    }\n\n    isEmail = (val) => {\n        return /\\S+@\\S+\\.\\S+/.test(val);\n    }\n\n    handleChangeInputName = event => {\n        const name = event.target.value\n        this.setState({ name })\n    }\n\n    handleChangeInputEmail = event => {\n        const email = event.target.value\n        this.setState({ email })\n    }\n\n    handleIncludeInfo = async (event) => {\n        event.preventDefault();\n        const { name, email } = this.state\n        const payload = { name, email }\n\n        if (name === '' || email === ''){\n            window.alert(`Please enter your name and/or email`)\n        } else if (this.isEmail(email)){\n            await api.createInfo(payload).then(res => {\n                window.alert(`Info inserted successfully`)\n                this.setState({\n                    name: '',\n                    email: '',\n                })\n            })\n        } else {\n            window.alert(`Your email format is incorrect`)\n        }\n    }\n    \n    handleShowSubmission = event => {\n        event.preventDefault();\n        api.getInfo().then(res => {\n            this.setState({ info: res.data.data })\n            console.log(\"got res\", res.data.data[0])\n        })\n    }\n\n    renderInfoList = (info) => {\n        if(info){\n            let i\n            let submitted = []\n            for (i = 0; i < info.length; i++) {\n                let entry = info[i].name + \", \" + info[i].email\n                submitted.push(entry)\n            }\n            return (<InfoList>\n                {submitted.map((row) => <div>\n                    {row}{\"\\n\"}\n                </div>)}\n\n            </InfoList>)\n        }\n    }\n\n    render() {\n        const { name, email, info } = this.state\n        return (\n            <Wrapper>\n                <InfoForm>\n                    {/* <GlobalFonts /> */}\n                    <Title>We think your company would be a great fit!</Title>\n\n                    <Label>Name</Label>\n                    <InputText\n                        type=\"text\"\n                        value={name}\n                        onChange={this.handleChangeInputName}\n                    />\n\n                    <Label>Business Email </Label>\n                    <InputText\n                        type=\"text\"\n                        value={email}\n                        onChange={this.handleChangeInputEmail}\n                    />\n\n                    <Button onClick={this.handleIncludeInfo}>Get Started Today</Button>\n                    <Button onClick={this.handleShowSubmission}>Show Submission</Button>\n                    {this.renderInfoList(info)}\n                </InfoForm>\n            </Wrapper>\n        )\n    }\n}\n\nexport default InfoInsert\n\n","/Users/vickyhhuang/Desktop/RelyDigital_FullStackDeveloper_VickyHuang/frontend/src/api/index.js",[],"/Users/vickyhhuang/Desktop/RelyDigital_FullStackDeveloper_VickyHuang/frontend/src/fonts/Poppins/fonts.js",[],["36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":93,"column":34,"nodeType":"44","messageId":"45","endLine":93,"endColumn":36},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["48"],["49"],"no-global-assign","no-unsafe-negation"]