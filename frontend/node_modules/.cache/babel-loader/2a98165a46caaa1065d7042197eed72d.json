{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/vickyhhuang/Desktop/RelyDigital_FullStackDeveloper_VickyHuang/frontend/src/pages/InfoInsert.jsx\";\nimport React, { Component } from 'react';\nimport api from '../api';\nimport styled from 'styled-components';\nimport GlobalFonts from '../fonts/Poppins/fonts';\nconst Title = styled.h4`\n    margin-bottom: 30px;\n    margin-top: 60px;\n    align-self: center;\n    font-weight: bold;\n    font-family: Hachi Maru Pop;\n`;\n_c = Title;\nconst Label = styled.label`\n    \n`;\n_c2 = Label;\nconst InputText = styled.input.attrs({\n  className: 'form-control'\n})`\n    border-radius: 0px;\n    margin-bottom: 10px;\n`;\n_c3 = InputText;\nconst Button = styled.button`\n    margin-top: 5px;\n    margin-bottom: 20px;\n    background: #484848;\n    color: white;\n    border: #484848;\n    border-radius: 1px;\n    padding: 10px 120px;\n    transition-duration: 0.1s;\n    &:hover {\n        background: #36B1A7;\n      }\n`;\n_c4 = Button;\nconst Wrapper = styled.div.attrs({\n  className: 'form-group'\n})`\n    margin: 10px 20px;\n    font-family: 'Popins';\n    color: #484848;\n    display: flex;\n    flex-direction: column;\n    justify-items: center;\n    align-items: center;\n`;\n_c5 = Wrapper;\nconst InfoForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-items: center;\n    max-width: fit-content;\n`;\n_c6 = InfoForm;\nconst InfoList = styled.div`\n    border: solid 2px #484848;\n    padding: 10px;\n`;\n_c7 = InfoList;\n\nclass InfoInsert extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeInputName = event => {\n      const name = event.target.value;\n      this.setState({\n        name\n      });\n    };\n\n    this.handleChangeInputEmail = event => {\n      const email = event.target.value;\n      this.setState({\n        email\n      });\n    };\n\n    this.handleIncludeInfo = async event => {\n      event.preventDefault();\n      const {\n        name,\n        email\n      } = this.state;\n      const payload = {\n        name,\n        email\n      };\n      await api.createInfo(payload).then(res => {\n        window.alert(`Info inserted successfully`);\n        this.setState({\n          name: '',\n          email: ''\n        });\n      });\n      console.log(\"handleIncludeInfo\");\n    };\n\n    this.handleShowSubmission = event => {\n      event.preventDefault();\n      api.getInfo().then(res => {\n        this.setState({\n          info: res.data.data\n        });\n        console.log(\"got res\", res.data.data[0]);\n      });\n      console.log(\"handleShowSubmission\");\n    };\n\n    this.renderInfoList = info => {\n      if (info) {\n        let i;\n        let submitted = [];\n\n        for (i = 0; i < info.length; i++) {\n          let entry = info[i].name + \", \" + info[i].email;\n          submitted.push(entry);\n        }\n\n        return /*#__PURE__*/_jsxDEV(InfoList, {\n          children: submitted.map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [row, \"\\n\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this);\n      }\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      info: null\n    };\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      info\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(InfoForm, {\n        children: [/*#__PURE__*/_jsxDEV(GlobalFonts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          children: \"We think your company would be a great fit!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputText, {\n          type: \"text\",\n          value: name,\n          onChange: this.handleChangeInputName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: \"Business Email \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputText, {\n          type: \"text\",\n          value: email,\n          onChange: this.handleChangeInputEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleIncludeInfo,\n          children: \"Get Started Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleShowSubmission,\n          children: \"Show Submission\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), this.renderInfoList(info)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default InfoInsert;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Label\");\n$RefreshReg$(_c3, \"InputText\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"Wrapper\");\n$RefreshReg$(_c6, \"InfoForm\");\n$RefreshReg$(_c7, \"InfoList\");","map":{"version":3,"sources":["/Users/vickyhhuang/Desktop/RelyDigital_FullStackDeveloper_VickyHuang/frontend/src/pages/InfoInsert.jsx"],"names":["React","Component","api","styled","GlobalFonts","Title","h4","Label","label","InputText","input","attrs","className","Button","button","Wrapper","div","InfoForm","form","InfoList","InfoInsert","constructor","props","handleChangeInputName","event","name","target","value","setState","handleChangeInputEmail","email","handleIncludeInfo","preventDefault","state","payload","createInfo","then","res","window","alert","console","log","handleShowSubmission","getInfo","info","data","renderInfoList","i","submitted","length","entry","push","map","row","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport api from '../api'\n\nimport styled from 'styled-components'\nimport GlobalFonts from '../fonts/Poppins/fonts'\n\nconst Title = styled.h4`\n    margin-bottom: 30px;\n    margin-top: 60px;\n    align-self: center;\n    font-weight: bold;\n    font-family: Hachi Maru Pop;\n`\n\n\nconst Label = styled.label`\n    \n`\n\nconst InputText = styled.input.attrs({\n    className: 'form-control',\n})`\n    border-radius: 0px;\n    margin-bottom: 10px;\n`\n\n\nconst Button = styled.button`\n    margin-top: 5px;\n    margin-bottom: 20px;\n    background: #484848;\n    color: white;\n    border: #484848;\n    border-radius: 1px;\n    padding: 10px 120px;\n    transition-duration: 0.1s;\n    &:hover {\n        background: #36B1A7;\n      }\n`\n\nconst Wrapper = styled.div.attrs({\n    className: 'form-group',\n})`\n    margin: 10px 20px;\n    font-family: 'Popins';\n    color: #484848;\n    display: flex;\n    flex-direction: column;\n    justify-items: center;\n    align-items: center;\n`\n\nconst InfoForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-items: center;\n    max-width: fit-content;\n`\nconst InfoList = styled.div`\n    border: solid 2px #484848;\n    padding: 10px;\n`\n\n\nclass InfoInsert extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            name: '',\n            email: '',\n            info: null,\n        }\n    }\n\n    handleChangeInputName = event => {\n        const name = event.target.value\n        this.setState({ name })\n    }\n\n    handleChangeInputEmail = event => {\n        const email = event.target.value\n        this.setState({ email })\n    }\n\n    handleIncludeInfo = async (event) => {\n        event.preventDefault();\n        const { name, email } = this.state\n        const payload = { name, email }\n\n        await api.createInfo(payload).then(res => {\n            window.alert(`Info inserted successfully`)\n            this.setState({\n                name: '',\n                email: '',\n            })\n        })\n        console.log(\"handleIncludeInfo\")\n    }\n\n    handleShowSubmission = event => {\n        event.preventDefault();\n        api.getInfo().then(res => {\n            this.setState({ info: res.data.data })\n            console.log(\"got res\", res.data.data[0])\n        })\n        console.log(\"handleShowSubmission\")\n    }\n\n    renderInfoList = (info) => {\n        if(info){\n            let i\n            let submitted = []\n            for (i = 0; i < info.length; i++) {\n                let entry = info[i].name + \", \" + info[i].email\n                submitted.push(entry)\n            }\n            return (<InfoList>\n                {submitted.map((row) => <div>\n                    {row}{\"\\n\"}\n                </div>)}\n\n            </InfoList>)\n        }\n    }\n\n    render() {\n        const { name, email, info } = this.state\n        return (\n            <Wrapper>\n                <InfoForm>\n                    <GlobalFonts />\n                    <Title>We think your company would be a great fit!</Title>\n\n                    <Label>Name</Label>\n                    <InputText\n                        type=\"text\"\n                        value={name}\n                        onChange={this.handleChangeInputName}\n                    />\n\n                    <Label>Business Email </Label>\n                    <InputText\n                        type=\"text\"\n                        value={email}\n                        onChange={this.handleChangeInputEmail}\n                    />\n\n                    <Button onClick={this.handleIncludeInfo}>Get Started Today</Button>\n                    <Button onClick={this.handleShowSubmission}>Show Submission</Button>\n                    {this.renderInfoList(info)}\n                </InfoForm>\n            </Wrapper>\n        )\n    }\n}\n\nexport default InfoInsert"]},"metadata":{},"sourceType":"module"}